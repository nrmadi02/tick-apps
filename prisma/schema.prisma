// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    id                     Int       @id @default(autoincrement())
    username               String    @unique
    password               String
    email                  String    @unique
    phone                  String?
    verifiedAt             DateTime?
    emailVerificationToken String?   @unique
    role                   Role      @relation(fields: [roleId], references: [id])
    roleId                 String
    createdAt              DateTime  @default(now())
    updatedAt              DateTime  @updatedAt

    @@map("users")
}

model Role {
    id          String       @id @default(uuid())
    name        String       @unique
    description String?
    permissions Permission[] @relation("RolePermissions")
    users       User[]

    @@map("roles")
}

model Permission {
    id          String     @id @default(uuid())
    action      ActionType
    subject     Subject    @relation(fields: [subjectId], references: [id])
    subjectId   String
    description String?
    roles       Role[]     @relation("RolePermissions")

    @@unique([action, subjectId])
    @@map("permissions")
}

model Subject {
    id          String       @id @default(uuid())
    name        String       @unique
    description String?
    permissions Permission[]

    @@map("subjects")
}

enum ActionType {
    manage
    create
    read
    update
    delete
}
